#!/usr/bin/env zsh
dir=$PROJECT_DIR/versioned/paper
cd $dir

source paper-components/defs.zsh

# collect includes
bin/collect-figures

build='build'
body="$build/draft_body.tex"
texfile="$build/draft.tex"
bibfile="text/references.bib"
defs="paper-components/defs"
md_body="$build/body.md"
body="$build/body.tex"
name="Crystal-Knob-xenoliths"
abstract="build/abstract.tex"
build_dest="$build/$name.pdf"
auxfile="${build_dest:r}.aux"
outfile="output/$name.pdf"

mkdir -p $build

echo "Converting markdown to latex"

rm -f $body $captions $md_body $abstract

## Figure captions
captions=build/figure-captions.tex
cat text/figure-captions.md \
| text-pipeline \
> $captions

# Process abstract
cat text/abstract.md \
| text-pipeline \
> $abstract

# Process body text
echo "" > $md_body
for fn in text/chapters/*.md; do
  cat $fn >> $md_body
  echo "\n\n" >> $md_body
done

cat $md_body \
| sed -r 's/^\\section\{(Introduction)\}/\\invisiblesection\{\1\}/g' \
| sed -r 's/<!--\[\[\[(.+)\]\]\]-->/\\inlinefigure\{\1\}/g' \
| text-pipeline \
| figurator inline \
  text/includes.yaml \
  --template-dir paper-components/includes \
  --captions $captions \
  --collect-dir collected \
> $body

cp text/title-block.tex build/title-block.tex

cat text/key-points.md | text-pipeline > build/key-points.tex
cat text/modeling-supplement.md \
| text-pipeline \
> build/modeling-supplement.tex

# Insert the appendix into the standard template
split=2
head -n -$split $defs/draft.tex > $texfile
cat source/supplement-shim.tex >> $texfile
tail -n $split $defs/draft.tex >> $texfile

# Copy preamble
cat "$defs/preamble"/*.tex > "$build/preamble.tex"

echo "Running latex"
run-latex $texfile $build_dest #2>/dev/null

echo "Filtering bibliography"
# Filter bibliography
LIBRARY="/Users/Daven/Resources/Papers/library.bib"
bib-filter --clean \
  --aux $auxfile $LIBRARY $bibfile
# rebuild citations
bibtex $auxfile

echo "Running latex"

run-latex $texfile $build_dest #2>/dev/null
cp $build_dest $outfile
#mv "build/$name.pdf" "$outfile"

tag --set paper-draft $outfile


scale-images $outfile "${outfile:r}-sm.pdf" "printer"

